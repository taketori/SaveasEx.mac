SaveasEx.mac.txt

　これは、<SaveasEx.mac> の「マニュアル」ファイルです。
　マクロの概要は、配布ファイルに同梱の<README.txt>をごらんください。

1. 使い方


2. 設定方法

 　設定は、マクロ自体に設定を書き込みます。
 　従って、マクロをインストールするたびに設定し直す必要があります。

2-1. #search_lim : "ファイル名と思わしき文字列"を探す行数
 　"ファイル名と思わしき文字列"を、ファイル先頭からここで設定した行数まで探します。論理行です。

 #search_lim = 5;		// 初期値

2-2. #conf_save : (名前を付けて)保存する前の確認ダイアログ(論理和)
 　ファイル名を変更する前に、どのような条件の時に確認ダイアログを表示するかを設定します。また、ダイアログを表示した場合の動作を設定します。

 0x00F : 
   0 = 確認ダイアログを表示しない。
   1 = スラッシュをバックスラッシュに、相対パスを絶対パスに変換したとき。
   2 = フォルダ情報を記載したファイル($mount_infoの説明参照)の情報を利用しようとしたとき。
   4 = ドライブのルートフォルダに保存するとき。
 0x0F0 :
   1 = 変更後のファイル名と同じファイルが存在するとき。
   2 = ディレクトリが存在しないとき。
   4 = フォルダ名が同じで、ファイル名(ベース名)だけを変更するとき。
     　なお、文字列中にスラッシュや(相対指定の意味の)ピリオドが含まれている場合でCOMの呼び出しに失敗すると、ファイルやディレクトリの存在有無の判定が怪しくなります。
 0xF00 :
   1 = ダイアログを表示したら、名前を変更するだけで保存しない。
   2 = ダイアログを表示しなかったら、名前を変更するだけで保存しない。
   3 = 常に名前の変更だけで保存しない。秀丸標準の「ファイル名変更」ダイアログで"実際のファイル名も変更する"チェックをOFFにした状態と同様の動作をします。

 #conf_save = 0x001 | 0x004 | 0x010 | 0x020 | 0x040 | 0x100 | 0x200;		// 初期値

2-3. $mount_info : フォルダ情報を記載したファイル名のフルパス
 　フォルダ情報を記載したファイルを作っておくと、たとえば "/sharedoc" を "C:\Documents and Settings\All Users\Documents" と見なすようにしたり、~ チルダをマイドキュメントと見なしたりすることができます。
  (チルダをマイドキュメント見なすようにするには、フォルダ情報を記載したファイルで"/home"を設定しておく必要があります。)
 　サンプルは、配布ファイル同梱のmount.info.sampleを参照してください。
 　自動で作るには、cygwinを立ち上げてから「echo [mount] > mount.info; mount | sed -re 's/^([^\/]+) on (\/[^ ]+) .+/\2 = \1/g' >> mount.info」みたいな感じで。

 $mount_info = macrodir + "\\mount.info";		// 初期値

2-4. $tilde : ~ の代わりに使用される特殊フォルダ
 　"ファイル名と思わしき文字列"の先頭に ~ が記載されていた場合、どのフォルダと見なすかを設定します。
 　$mount_info で指定したファイル中で /home が指定されていないときにのみ有効です。
 　設定できるのは、WSHのWshShellオブジェクトのSpecialFoldersプロパティで設定できるもののみです。

 $tilde = "MyDocuments";		// 初期値

2-5. #shebang : shebangらしき行の ! 直前の記号をコメント文字として利用する条件
 　本マクロでは"ファイル名と思わしき文字列"をコメント部分から優先して探すのですが、2行目以降が「! 直前の半角記号」と同じ文字列で始まっていたら、たとえコメント部分でなくてもコメントと見なし、(そこにファイル名と思わしき文字列があれば)その部分をさらに優先して利用できます。
 　その設定をします。

 0x000F : shebangらしき行の ! 直前の記号をコメント文字として...
   0 = 利用しない。
   1 = 利用する。以下の設定が有効になります。
 0x00F0 : 利用する条件。編集中のファイルのファイル名変更前のファイルタイプ別設定の...
   1 = 設定名が「共通」の設定の場合。
   2 = [複数行コメント]が「自動判定」の場合。
   4 = [複数行コメント - 言語]が「なし」の場合。
   8 = [複数行コメント]の言語を指定しているか「ユーザ定義」の場合。
 0x0F00 : 1行目の文字列において...
   1 = #! という文字列であれば、必ず # を用いる。
   2 = 連続する半角記号中の ! は無視(HTMLなど)。
   4 = 1行目(1文字目)がコメントでない場合で、上記の0x0020または0x0080が有効の時。
       　shebangはコメントの特殊なケースですが、shebang部分を秀丸がコメントと解釈できなかった場合はほかのコメント部分も「普通の部分」と見なされている恐れがあります。そういう場合でも、このオプションを設定しておけば正しくコメント部分を探し出すことができると思います。
 0xF000 : ファイル名を変更後、shebangらしき行が...
   1 = コメントになることを確認する。以下の設定が有効になります。
   2 = 確認するのは、対応するファイルタイプ別設定の名前が変更された時のみ。

 #shebang = 0x0001 | 0x0010 | 0x0020 | 0x0040 | 0x0100 | 0x1000 | 0x2000;		// 初期値

2-6. #search_fn : 「ファイルと思わしき場所」をカラー表示しないとき、"ファイル名と思わしき文字列"の検索方法(論理和)
 　ファイル名の変更に使う"ファイル名と思わしき文字列"は、ファイル先頭から5行(初期設定)以内にある、ファイルタイプ別設定の「ファイル名と思わしき場所」に該当する文字列です。
 　もし「ファイル名と思わしき場所」を設定していない場合でもそれっぽいをところを検索できるようにここで設定します。

 0xF :
   0 = マクロ終了（検索しない）。
   1 = 後述する$fregex、#fregoptを利用。$fregexが空白の時はマクロ終了。
   2 = [ファイルタイプ別の設定-ファイル名のカスタマイズ]の内容を利用（「自動判断」の場合は0x1と同様）。
   3 = 0x2と同様。「自動判断」や見つからなかったら0x1と同様。

 #search_fn = 0x1 | 0x2;		// 初期値

2-6-1. $fregex : 「ファイル名と思わしき場所」を表す正規表現

 $fregex = "([a-z]:|\\\\|)?[^ :\|\?<>\*]+(\.[a-z]{1,4})?";		// 初期値

2-6-2. #fregopt : 「ファイル名と思わしき場所」を探すときの検索オプション(論理和)

 0x0F :
   1 = 単語
   2 = 大/小文字の区別
 0xF0 : 
   1 = 文字定数中のみ
   2 = コメント定数中のみ

 #fregopt = 0x001;		// 初期値

2-7. #fn_len : "ファイル名と思わしき文字列"の最低文字列長
 　検索の結果、"ファイル名と思わしき文字列"が見つかっても、その文字列長がここで設定する数字以下であれば、それを無視して次の候補を探します。
 　ただし、コメント行中のファイル名(のカラー表示)をのぞきます。

 #fn_len = 2;		// 初期値

2-8. #del_line : 変更後のファイル名(フルパス)と"ファイル名と思わしき文字列"とを比較して、同義の場合は記載行全体を削除するか。

 0x00F
   0 = 削除しない。
   1 = (名前を付けて)保存する前の確認ダイアログを表示した場合は削除する。
   2 = ダイアログを表示しなかった場合に削除する。
 0x0F0 : 削除する場所
   0 = 行全体を削除。
   1 = 削除は、"ファイル名と思わしき文字列"のフォルダ名っぽいところのみ。
  0xF00 : 比較条件
   1 = 新規作成時は常に同義と見なす。
   2 = 比較の対象はファイル名(basename)のみ。

 #del_line = 0x001 | 0x002 | 0x010 | 0x020 | 0x100;		// 初期値

EOF

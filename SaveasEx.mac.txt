SaveasEx.mac.txt

ファイル先頭の文字列をファイル名として、ファイル保存。
要するに、行頭からコメント行になっている行にある文字列のうち、ファイル先頭に最も近いファイルと思わしき文字列をファイル名として保存する。さらに...
TODO: カラーマーカーがあり、それが「ファイルと思わしき場所」と同じカラー表示のときは、その文字列をファイル名として用いる。
TODO: そういう文字列がないときは、ファイル先頭の文字列を利用する。連続する、ファイル名に使える最初の文字から、それに連続するファイル名に使える文字列(空白も含む)
それらの行のうち、shebang行を無視する。
ピリオド、スラッシュ、バックスラッシュを無視しないので、現フォルダからの相対位置で保存できる。
mount情報が使える。チルダでマイドキュメントとか。事前の準備が必要。
保存前に問い合わせてくれる。保存せずにファイル名を変更するだけということもできる。
TODO: デフォルトはダイアログも出さず現在のフォルダに現在の文字・改行コードで保存するが、ダイアログを出して現在の状態とは異なる設定で保存することも可能。（ダイアログを出すときは、田楽があると便利）


 shebang行とは :
1行目1文字目から( #! といったように)半角記号とその直後の半角 ! で始まっている行です。
shebang行らしきものがあれば、! 直前の文字列を、たとえコメント部分でなくてもコメント開始文字列と認識します。
本マクロでは、改名に利用する「ファイル名と思われる文字列」をコメント部分から探すのですが、
2行目以降がそのコメント文字と同じ文字列で始まっていたら、たとえコメント部分でなくても(そこにファイル名と思われる文字列があれば)その部分を利用します。
大切なことなので2回いいますが、同じ文字列で始まっていないとだめです。
この機能は、たとえば新規作成("ファイルタイプ別設定"が「共通」で、"複数行コメント"が「自動判定」や「なし」)...のような、コメントと見なされる部分が変更されやすい時に便利です。
なお、shebang行にある文字列は改名文字の対象とはなりません。

//// ファイル名風文字列を探す行数。
//// ファイル先頭行から何行目まで探すか。
#search_lim = 5;

//// ファイル名の変更前にその確認ダイアログを表示する条件。
//// なお、文字列中にスラッシュや(相対指定の意味の)ピリオドが含まれている場合、WSHの起動に失敗すると、動作は不定になります。(ファイルやディレクトリの存在有無の判定が怪しくなります)
//// 0x000=確認しない。0x001=スラッシュ・相対パスを、バックスラッシュ・絶対パスに変換したとき。0x002=mount.infoの情報を利用しようとしたとき。0x004=ルートフォルダに保存するとき。
//// 0x010=変更後のファイル名と同じファイルが存在するとき。0x020=ディレクトリが存在しないとき。0x040=現在のファイル名と異なるとき（ファイル名が同一でフォルダだけの変更は無視されます。心配な場合は0x010や0x020も設定してください。）
//// 0x100=ダイアログを表示したら名前を変更するだけで保存しない。0x200=表示しなかった場合のみ保存せず名前を変更。0x300=常に名前の変更だけで保存しない。
//// 「名前の変更だけで保存しない」場合は、秀丸標準の「ファイル名変更」ダイアログで"実際のファイル名も変更する"チェックをOFFにした状態と同様の動作をします。
////TODO: 0x10000=自動起動マクロとして起動した場合、常にファイル名を変更するだけ。
#conf_save = 0x001 | 0x004 | 0x010 | 0x020 | 0x040 | 0x100 | 0x200;

//// mount情報(マクロフォルダ中にあるmount.info)を使うか。
////  0x0: 使わない。スラッシュはバックスラッシュと同じ扱いになります。従って、「ファイル名風文字列」がスラッシュから始まる場合、そのルートフォルダからしたのと同義になります。また、先頭のチルダは個人のドキュメントフォルダになると思います（がんばって推測します）。
////  0x1: 使う。使うようにすると、/homeとか~とか使えます。CGIを作っているときとかマイドキュメントが/homeと同一でないときとかに便利かも。
////  0x2: cygpathを実行する。cygpathは、パスが通っている必要があります。
////  0x3: mount.infoがなければ、0x2の動作をする。
////  mount.infoのサンプルは、マクロ同梱のmount.info.sampleを参照してください。自動で作るには、cygwinを立ち上げてから「cd <マクロフォルダ>; echo [mount] > mount.info; mount | sed -re 's/^([^\/]+) on (\/[^ ]+) .+/\2 = \1/g' >> mount.info」みたいな感じで。
////  cygpathを使う方法はobsolute。1)標準出力を取り込む必要がある、2)cygpathの引数に（フォルダの区切りとして）バックスラッシュ1文字を渡させない、3)ファイルにしておけばmount情報以外にも自分勝手にエイリアスなどを追加できる、などの不都合があるので。
#use_mount = true;

//// ~の代わりに使用される特殊フォルダ。
//// 右辺値は、WSHのWshShellオブジェクトのSpecialFoldersプロパティで設定できるもののみです。
//// mount.info中で/homeが指定されていないときにのみ、有効です。
$tilde = "MyDocuments";

////shebang行の ! 直前の記号をコメント文字として利用するか。
//// 0x0000 = 利用しない。0x0001 = 利用する。
//// 0x0010 = ファイルタイプ別設定が共通の時。0x0020 = 複数行コメントが自動判定の時。0x0040 = 言語がなしの時。0x0080 = 言語を指定しているまたはユーザ定義の時。
//// 0x0100 = #! という文字列であれば #。0x0200 = 連続する半角記号中の ! は無視(HTMLなどで)。
//// 0x0400 = 0x0020または0x0080が有効の時で、1行目(1文字目)がコメントでないとき。
//// 0x1000 = ファイル名を変更後、shebang行であったことを確認する。
//// 0x2000 = 対応するファイルタイプ別設定の名前が変更された時のみ。
#shebang = 0x0001 | 0x0010 | 0x0020 | 0x0040 | 0x0100 | 0x1000 | 0x2000;

//// 「ファイルと思わしき場所」をカラー表示しないとき、ファイル風文字列の検索方法。
//// 0x0=マクロ終了（検索しない）。
//// 0x1=$fregex・#fregoptを利用。$fregexが空白の時はマクロ終了。
//// 0x2=[ファイルタイプ別の設定-ファイル名のカスタマイズ]の内容を利用（「自動判断」の場合は0x1と同様）。
//// 0x3=0x2と同様。「自動判断」や見つからなかったら0x1と同様。
#search_fn = 0x1 | 0x2;

//// 「ファイル名と思わしき場所」を表す正規表現
$fregex = "([a-z]:|\\\\|)?[^ :\|\?<>\*]+(\.[a-z]{1,4})?";

//// 「ファイル名と思わしき場所」を探すときの検索オプション。
//// 0x001=単語, 0x002=大/小文字の区別, 0x010=文字定数中のみ, 0x020=コメント定数中のみ
#fregopt = 0x001;

////TODO: ファイル名と思わしき文字列の最低文字列長。
//// コメント行中のファイル名(のカラー表示)をのぞいて、この文字数未満であればファイル名と見なさない。
#fn_len = 2;

//// 改名前のファイル名(フルパス)とファイル名風文字列とを比較して、同義の場合は記載行全体を削除するか。
//// 0x000=削除しない。0x001=ファイル名変更前の確認ダイアログを表示した場合は削除する。0x002=表示しなかった場合に削除する。
//// 0xN0N=行全体を削除。0x010=比較の対象はファイル名(basename)のみ。0x020=削除はフォルダ風文字列のみ。
//// 0x100=新規作成時は常に同義と見なす。
#del_line = 0x001 | 0x002 | 0x010 | 0x020 | 0x100;
